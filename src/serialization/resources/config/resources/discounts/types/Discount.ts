/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { HotschedulesToast } from "@fern-api/toast";
import * as core from "../../../../../../core";

export const Discount: core.serialization.ObjectSchema<
    serializers.config.Discount.Raw,
    HotschedulesToast.config.Discount
> = core.serialization
    .object({
        name: core.serialization.string().optional(),
        active: core.serialization.boolean().optional(),
        type: core.serialization.lazy(async () => (await import("../../../../..")).config.DiscountType).optional(),
        percentage: core.serialization.number().optional(),
        amount: core.serialization.number().optional(),
        selectionType: core.serialization
            .lazy(async () => (await import("../../../../..")).config.DiscountSelection)
            .optional(),
        nonExclusive: core.serialization.boolean().optional(),
        itemPickingPriority: core.serialization
            .lazy(async () => (await import("../../../../..")).config.MenuSelection)
            .optional(),
        fixedTotal: core.serialization.number().optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../../../..")).config.ToastReference));

export declare namespace Discount {
    interface Raw extends serializers.config.ToastReference.Raw {
        name?: string | null;
        active?: boolean | null;
        type?: serializers.config.DiscountType.Raw | null;
        percentage?: number | null;
        amount?: number | null;
        selectionType?: serializers.config.DiscountSelection.Raw | null;
        nonExclusive?: boolean | null;
        itemPickingPriority?: serializers.config.MenuSelection.Raw | null;
        fixedTotal?: number | null;
    }
}
