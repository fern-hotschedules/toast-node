/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { HotschedulesToast } from "@fern-api/toast";
import * as core from "../../../../../../core";

export const PreModifier: core.serialization.ObjectSchema<
    serializers.config.PreModifier.Raw,
    HotschedulesToast.config.PreModifier
> = core.serialization
    .object({
        name: core.serialization.string().optional(),
        scalePrice: core.serialization.boolean().optional(),
        basePrice: core.serialization.number().optional(),
        scaleFactor: core.serialization.number().optional(),
        displayMode: core.serialization
            .lazy(async () => (await import("../../../../..")).config.PreModifierPlacement)
            .optional(),
        parent: core.serialization
            .lazyObject(async () => (await import("../../../../..")).config.ToastReference)
            .optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../../../..")).config.ToastReference));

export declare namespace PreModifier {
    interface Raw extends serializers.config.ToastReference.Raw {
        name?: string | null;
        scalePrice?: boolean | null;
        basePrice?: number | null;
        scaleFactor?: number | null;
        displayMode?: serializers.config.PreModifierPlacement.Raw | null;
        parent?: serializers.config.ToastReference.Raw | null;
    }
}
