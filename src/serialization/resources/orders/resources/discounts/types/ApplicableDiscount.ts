/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { HotschedulesToast } from "@fern-api/toast";
import * as core from "../../../../../../core";

export const ApplicableDiscount: core.serialization.ObjectSchema<
    serializers.orders.ApplicableDiscount.Raw,
    HotschedulesToast.orders.ApplicableDiscount
> = core.serialization.object({
    discount: core.serialization.lazyObject(async () => (await import("../../../../..")).orders.ToastReference),
    applicableChecks: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../../../..")).orders.ExternalReference))
        .optional(),
    applicableSelections: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../../../..")).orders.ExternalReference))
        .optional(),
});

export declare namespace ApplicableDiscount {
    interface Raw {
        discount: serializers.orders.ToastReference.Raw;
        applicableChecks?: serializers.orders.ExternalReference.Raw[] | null;
        applicableSelections?: serializers.orders.ExternalReference.Raw[] | null;
    }
}
