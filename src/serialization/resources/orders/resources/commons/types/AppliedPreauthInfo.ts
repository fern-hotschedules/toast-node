/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { HotschedulesToast } from "@fern-api/toast";
import * as core from "../../../../../../core";

export const AppliedPreauthInfo: core.serialization.ObjectSchema<
    serializers.orders.AppliedPreauthInfo.Raw,
    HotschedulesToast.orders.AppliedPreauthInfo
> = core.serialization.object({
    guid: core.serialization.string().optional(),
    token: core.serialization.string(),
    oneTimeUse: core.serialization.boolean().optional(),
    preAuthAmount: core.serialization.number(),
    cardType: core.serialization.lazy(async () => (await import("../../../../..")).orders.CardType),
    readerType: core.serialization.lazy(async () => (await import("../../../../..")).orders.ReaderType).optional(),
    last4CardDigits: core.serialization.string(),
    cardHolderFirstName: core.serialization.string().optional(),
    cardHolderLastName: core.serialization.string().optional(),
    cardHolderhash4: core.serialization.string().optional(),
    cardHolderhash6: core.serialization.string().optional(),
    magStripeName: core.serialization.string().optional(),
    cardHolderExpirationMonth: core.serialization.string().optional(),
    cardHolderExpirationYear: core.serialization.string().optional(),
    useCount: core.serialization.number().optional(),
});

export declare namespace AppliedPreauthInfo {
    interface Raw {
        guid?: string | null;
        token: string;
        oneTimeUse?: boolean | null;
        preAuthAmount: number;
        cardType: serializers.orders.CardType.Raw;
        readerType?: serializers.orders.ReaderType.Raw | null;
        last4CardDigits: string;
        cardHolderFirstName?: string | null;
        cardHolderLastName?: string | null;
        cardHolderhash4?: string | null;
        cardHolderhash6?: string | null;
        magStripeName?: string | null;
        cardHolderExpirationMonth?: string | null;
        cardHolderExpirationYear?: string | null;
        useCount?: number | null;
    }
}
