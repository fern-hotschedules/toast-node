/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { HotschedulesToast } from "@fern-api/toast";
import * as core from "../../../../../../core";

export const AppliedServiceCharge: core.serialization.ObjectSchema<
    serializers.orders.AppliedServiceCharge.Raw,
    HotschedulesToast.orders.AppliedServiceCharge
> = core.serialization
    .object({
        chargeAmount: core.serialization.number().optional(),
        serviceCharge: core.serialization.lazyObject(
            async () => (await import("../../../../..")).orders.ExternalReference
        ),
        chargeType: core.serialization
            .lazy(async () => (await import("../../../../..")).orders.ServiceChargeType)
            .optional(),
        name: core.serialization.string().optional(),
        delivery: core.serialization.boolean().optional(),
        takeout: core.serialization.boolean().optional(),
        dineIn: core.serialization.boolean().optional(),
        gratuity: core.serialization.boolean().optional(),
        taxable: core.serialization.boolean().optional(),
        appliedTaxes: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../../../..")).orders.AppliedTaxRate))
            .optional(),
        tags: core.serialization.list(core.serialization.string()).optional(),
        serviceChargeCalculation: core.serialization
            .lazy(async () => (await import("../../../../..")).orders.ServiceChargeCalculation)
            .optional(),
        refundDetails: core.serialization
            .lazyObject(async () => (await import("../../../../..")).orders.RefundDetails)
            .optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../../../..")).orders.ExternalReference));

export declare namespace AppliedServiceCharge {
    interface Raw extends serializers.orders.ExternalReference.Raw {
        chargeAmount?: number | null;
        serviceCharge: serializers.orders.ExternalReference.Raw;
        chargeType?: serializers.orders.ServiceChargeType.Raw | null;
        name?: string | null;
        delivery?: boolean | null;
        takeout?: boolean | null;
        dineIn?: boolean | null;
        gratuity?: boolean | null;
        taxable?: boolean | null;
        appliedTaxes?: serializers.orders.AppliedTaxRate.Raw[] | null;
        tags?: string[] | null;
        serviceChargeCalculation?: serializers.orders.ServiceChargeCalculation.Raw | null;
        refundDetails?: serializers.orders.RefundDetails.Raw | null;
    }
}
