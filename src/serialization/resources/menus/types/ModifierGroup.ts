/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { HotschedulesToast } from "@fern-api/toast";
import * as core from "../../../../core";

export const ModifierGroup: core.serialization.ObjectSchema<
    serializers.menus.ModifierGroup.Raw,
    HotschedulesToast.menus.ModifierGroup
> = core.serialization.object({
    name: core.serialization.string().optional(),
    guid: core.serialization.string().optional(),
    referenceId: core.serialization.number().optional(),
    multiLocationId: core.serialization.string().optional(),
    masterId: core.serialization.number().optional(),
    visibility: core.serialization
        .list(core.serialization.lazy(async () => (await import("../../..")).menus.MenuEntityVisibility))
        .optional(),
    pricingStrategy: core.serialization.string().optional(),
    pricingRules: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).menus.PricingRules))
        .optional(),
    defaultOptionsChargePrice: core.serialization.string().optional(),
    defaultOptionsSubstitutionPricing: core.serialization.string().optional(),
    minSelections: core.serialization.number().optional(),
    maxSelections: core.serialization.number().optional(),
    requiredMode: core.serialization
        .lazy(async () => (await import("../../..")).menus.ModifierGroupBehavior)
        .optional(),
    isMultiSelect: core.serialization.boolean().optional(),
    preModifierGroupReference: core.serialization.number().optional(),
    modifierOptionReferences: core.serialization.list(core.serialization.number()).optional(),
});

export declare namespace ModifierGroup {
    interface Raw {
        name?: string | null;
        guid?: string | null;
        referenceId?: number | null;
        multiLocationId?: string | null;
        masterId?: number | null;
        visibility?: serializers.menus.MenuEntityVisibility.Raw[] | null;
        pricingStrategy?: string | null;
        pricingRules?: serializers.menus.PricingRules.Raw[] | null;
        defaultOptionsChargePrice?: string | null;
        defaultOptionsSubstitutionPricing?: string | null;
        minSelections?: number | null;
        maxSelections?: number | null;
        requiredMode?: serializers.menus.ModifierGroupBehavior.Raw | null;
        isMultiSelect?: boolean | null;
        preModifierGroupReference?: number | null;
        modifierOptionReferences?: number[] | null;
    }
}
