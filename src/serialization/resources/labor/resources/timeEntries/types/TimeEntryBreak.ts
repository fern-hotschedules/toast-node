/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { HotschedulesToast } from "@fern-api/toast";
import * as core from "../../../../../../core";

export const TimeEntryBreak: core.serialization.ObjectSchema<
    serializers.labor.TimeEntryBreak.Raw,
    HotschedulesToast.labor.TimeEntryBreak
> = core.serialization.object({
    guid: core.serialization.string().optional(),
    breakType: core.serialization
        .lazyObject(async () => (await import("../../../../..")).labor.ToastReference)
        .optional(),
    paid: core.serialization.boolean().optional(),
    inDate: core.serialization.string().optional(),
    outDate: core.serialization.string().optional(),
    missed: core.serialization.boolean().optional(),
    auditResponse: core.serialization.boolean().optional(),
});

export declare namespace TimeEntryBreak {
    interface Raw {
        guid?: string | null;
        breakType?: serializers.labor.ToastReference.Raw | null;
        paid?: boolean | null;
        inDate?: string | null;
        outDate?: string | null;
        missed?: boolean | null;
        auditResponse?: boolean | null;
    }
}
