/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { HotschedulesToast } from "@fern-api/toast";
import * as core from "../../../../../../core";

export const TimeEntry: core.serialization.ObjectSchema<
    serializers.labor.TimeEntry.Raw,
    HotschedulesToast.labor.TimeEntry
> = core.serialization
    .object({
        createdDate: core.serialization.string().optional(),
        modifiedDate: core.serialization.string().optional(),
        deletedDate: core.serialization.string().optional(),
        deleted: core.serialization.boolean().optional(),
        jobReference: core.serialization
            .lazyObject(async () => (await import("../../../../..")).labor.ExternalReference)
            .optional(),
        employeeReference: core.serialization
            .lazyObject(async () => (await import("../../../../..")).labor.ExternalReference)
            .optional(),
        shiftReference: core.serialization
            .lazyObject(async () => (await import("../../../../..")).labor.ExternalReference)
            .optional(),
        inDate: core.serialization.string().optional(),
        outDate: core.serialization.string().optional(),
        autoClockedOut: core.serialization.boolean().optional(),
        businessDate: core.serialization.string().optional(),
        regularHours: core.serialization.number().optional(),
        overtimeHours: core.serialization.number().optional(),
        hourlyWage: core.serialization.number().optional(),
        breaks: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../../../..")).labor.TimeEntryBreak))
            .optional(),
        declaredCashTips: core.serialization.number().optional(),
        nonCashTips: core.serialization.number().optional(),
        cashGratuityServiceCharges: core.serialization.number().optional(),
        nonCashGratuityServiceCharges: core.serialization.number().optional(),
        tipsWithheld: core.serialization.number().optional(),
        nonCashSales: core.serialization.number().optional(),
        cashSales: core.serialization.number().optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../../../..")).labor.ExternalReference));

export declare namespace TimeEntry {
    interface Raw extends serializers.labor.ExternalReference.Raw {
        createdDate?: string | null;
        modifiedDate?: string | null;
        deletedDate?: string | null;
        deleted?: boolean | null;
        jobReference?: serializers.labor.ExternalReference.Raw | null;
        employeeReference?: serializers.labor.ExternalReference.Raw | null;
        shiftReference?: serializers.labor.ExternalReference.Raw | null;
        inDate?: string | null;
        outDate?: string | null;
        autoClockedOut?: boolean | null;
        businessDate?: string | null;
        regularHours?: number | null;
        overtimeHours?: number | null;
        hourlyWage?: number | null;
        breaks?: serializers.labor.TimeEntryBreak.Raw[] | null;
        declaredCashTips?: number | null;
        nonCashTips?: number | null;
        cashGratuityServiceCharges?: number | null;
        nonCashGratuityServiceCharges?: number | null;
        tipsWithheld?: number | null;
        nonCashSales?: number | null;
        cashSales?: number | null;
    }
}
