/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface GetTimeEntriesRequest {
    /**
     * Optional start date and time of time period to match time
     * entries. A time entry matches the time period if its
     * clock-in `inDate` is after (inclusive) the specified
     * `startDate` and before (exclusive) the `endDate`. The
     * specified period cannot be longer than one month.
     *
     */
    startDate?: string;
    /**
     * Optional end date and time of time period to match time
     * entries. A time entry matches the time period if its
     * clock-in `inDate` is after (inclusive) the specified
     * `startDate` and before (exclusive) the `endDate`. The
     * specified period cannot be longer than one month.
     *
     */
    endDate?: string;
    /**
     * Start date and time of the time period to match modified
     * time entries. A time entry matches the time period if that
     * entry was modified after (inclusive) the
     * `modifiedStartDate`. If you include this parameter, you
     * must also include the `modifiedEndDate` parameter.  The
     * specified period cannot be longer than one month.
     *
     */
    modifiedStartDate?: string;
    /**
     * End date and time of the time period to match modified time
     * entries. A time entry matches the time period if that entry
     * was modified before (exclusive) the `modifiedEndDate`. If
     * you include this parameter, you must also include the
     * `modifiedStartDate` parameter.  The specified period cannot
     * be longer than one month.
     *
     */
    modifiedEndDate?: string;
    /**
     * Optional date to match time entries. A time entry matches
     * the business date if its clock-in `inDate` is during the
     * business date. The cutoff from one `businessDate` to the
     * next is the `closeoutHour` for the restaurant.
     *
     */
    businessDate?: string;
    /**
     * Optional flag to indicate whether missed breaks should be
     * returned in the breaks array for the time entries.
     *
     */
    includeMissedBreaks?: boolean;
    /**
     * The Toast platform GUID of the restaurant that is the
     * context for this operation.
     *
     */
    toastRestaurantExternalId: string;
}
