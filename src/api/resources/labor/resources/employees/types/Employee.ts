/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { HotschedulesToast } from "@fern-api/toast";

/**
 * A restaurant employee
 */
export interface Employee extends HotschedulesToast.labor.ExternalReference {
    /**
     * Date created, in UTC format (read-only).
     *
     */
    createdDate?: string;
    /**
     * Date modified, in UTC format (read-only).
     *
     */
    modifiedDate?: string;
    /**
     * Date deleted, in UTC format (read-only).
     *
     */
    deletedDate?: string;
    /**
     * Optional, first name of the employee.
     *
     */
    firstName?: string;
    /**
     * Optional, chosen name of the employee. To be used, when appropriate, in place of first name.
     *
     */
    chosenName?: string;
    /**
     * Optional, last name of the employee.
     *
     */
    lastName?: string;
    /**
     * Employee's email address.
     *
     */
    email?: string;
    /**
     * Employee's phone number
     *
     */
    phoneNumber?: string;
    /**
     * An optional numeric security code that a new employee can
     * use to begin a session in a Toast POS device. The
     * passcode value can only occur in `POST` requests. The
     * value must be numeric and it must contain at least one
     * and no more than eight digits. The employee can only use
     * the passcode at the restaurant specified in the `POST`
     * request.   The response to a successful `POST` request
     * will include the passcode value in clear text. A `GET`
     * request for the employee will not return the passcode.
     *
     */
    passcode?: string;
    /**
     * Optional, employeeâ€™s external ID in the Toast platform.
     *
     */
    externalEmployeeId?: string;
    /**
     * If the employee is deleted in the Toast platform.
     *
     */
    deleted?: boolean;
    /**
     * An employee's Toast platform account may be disabled if
     * that employee is suspected of fraud or other behavior
     * against the terms of service. If `true`, no shifts should
     * be scheduled for this employee.
     *
     */
    disabled?: boolean;
    /**
     * An array of external references to jobs assigned to this
     * employee.
     *
     */
    jobReferences?: HotschedulesToast.labor.ExternalReference[];
    /**
     * An optional array of per job wage overrides, where each
     * element defines a job reference and the wage override for
     * this employee when performing that job.
     *
     */
    wageOverrides?: HotschedulesToast.labor.JobWageOverride[];
    /**
     * This value is included for future use. An alternate Toast
     * platform GUID for the employee that will be used in
     * upcoming labor API functionality.
     *
     */
    v2EmployeeGuid?: string;
}
