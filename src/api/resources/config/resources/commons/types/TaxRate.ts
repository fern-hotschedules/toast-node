/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { HotschedulesToast } from "@fern-api/toast";

export interface TaxRate extends HotschedulesToast.config.ToastReference {
    /** The name of this tax rate. */
    name?: string;
    /** True if this tax rate is the default tax rate. */
    isDefault?: boolean;
    /**
     * The tax rate value. For a fixed amount tax rate, is the fixed amount of the tax. For a percent tax rate, the percentage is expressed as a decimal value. For example, if the tax rate is 6.25%, then `rate` is 0.0625. If `type` is `NONE`, then `rate` is `null`.
     *
     */
    rate?: number;
    /** The type of the tax rate. */
    type?: HotschedulesToast.config.TaxRateType;
    /**
     * The method used to round fractional currency amounts to non-fractional currency amounts. Only applies to `PERCENT` tax rates. For other tax rate types, `roundingType` is `null`. Valid values: * `HALF_UP` - Round values up or down to the nearest number. If the last digit is 5, which is halfway, then always round up to the nearest number. * `HALF_EVEN` - Round values up or down to the nearest number. If the last digit is 5, which is halfway, then round up or down to the nearest even number. * `ALWAYS_UP` - Always round up to the next number. * `ALWAYS_DOWN` - Always round down to the next number. For more details and examples, see <a href="https://doc.toasttab.com/doc/platformguide/adminPercentTaxRates.html#roundingOptions">Rounding options</a>.
     *
     */
    roundingType?: HotschedulesToast.config.RoundCurrencyMethod;
    /** An array of `TaxTableRow` objects that define a set of tax amounts that apply to specific sale amount ranges. */
    taxTable?: HotschedulesToast.config.TaxTableRow[];
    /**
     * An array of `ConditionalTaxRate`
     * objects that indicate the conditional rates that override
     * the default `rate` for this `TaxRate` in specific
     * situations. For example, a conditional rate might
     * override the default rate when a `TaxRate` is applied for
     * a specific dining option, such as takeout.
     *
     */
    conditionalTaxRates?: HotschedulesToast.config.ConditionalTaxRate[];
}
